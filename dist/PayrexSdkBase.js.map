{"version":3,"sources":["../src/PayrexSdkBase.js"],"names":["require","URL","PayrexApiError","REQUIRED_FIELDS","addQueryParams","searchParams","obj","prefix","key","hasOwnProperty","val","newPrefix","set","PayrexSdkBase","options","forEach","value","Error","credentials","baseUrl","fetch","Headers","path","queryParams","fetchRequest","body","method","url","headers","Accept","JSON","stringify","undefined","toString","buildFetchOptions","call","then","response","status","contentType","get","includes","TypeError","json","constructor","parseResponse","code","message","module","exports"],"mappings":"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","file":"PayrexSdkBase.js","sourcesContent":["/* eslint-disable no-restricted-syntax, no-prototype-builtins */\nconst { URL } = require('whatwg-url');\nconst PayrexApiError = require('./PayrexApiError');\n\nconst REQUIRED_FIELDS = ['fetch', 'Headers'];\n\nfunction addQueryParams(searchParams, obj, prefix = '') {\n  if (typeof obj === 'object') {\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        const val = obj[key];\n        const newPrefix = prefix ? `${prefix}[${key}]` : key;\n        if (typeof val === 'object') {\n          addQueryParams(searchParams, val, newPrefix);\n        } else {\n          searchParams.set(newPrefix, val);\n        }\n      }\n    }\n  }\n}\n\nclass PayrexSdkBase {\n  /**\n   * PayrexSdkBase constructor\n   * @param {object} options\n   * @param {string} options.credentials\n   * @param {string} options.baseUrl\n   * @param {function} options.fetch [Fetch function](https://fetch.spec.whatwg.org/)\n   * @param {function} options.Headers [Fetch Headers](https://fetch.spec.whatwg.org/)\n   */\n  constructor(options = {}) {\n    REQUIRED_FIELDS\n      .forEach((value) => {\n        if (!options[value]) {\n          throw new Error(`Option \"${value}\" is required`);\n        }\n      });\n\n    const {\n      credentials = '',\n      baseUrl = 'http://localhost:3000/',\n      fetch,\n      Headers,\n    } = options;\n    if (!baseUrl) {\n      throw new Error('Option \"baseUrl\" is required');\n    }\n\n    this.credentials = credentials;\n    this.baseUrl = baseUrl;\n    this.fetch = fetch;\n    this.Headers = Headers;\n  }\n\n  /**\n   * Make GET request\n   * @param {string} path Path (ex. \"/users\")\n   * @param {object} queryParams  Additional query params to merge\n   * @return {Promise}\n   */\n  get(path = '', { queryParams = {} } = {}) {\n    return this.fetchRequest('GET', path, queryParams, null);\n  }\n\n  /**\n   * Make POST request\n   * @param {string} path Path (ex. \"/users\")\n   * @param {object} body Body data\n   * @param {object} queryParams  Additional query params to merge\n   * @return {Promise}\n   */\n  post(path = '', body = {}, { queryParams = {} } = {}) {\n    return this.fetchRequest('POST', path, queryParams, body);\n  }\n\n  /**\n   * Make PUT request\n   * @param {string} path Path (ex. \"/users\")\n   * @param {object} body Body data\n   * @param {object} queryParams  Additional query params to merge\n   * @return {Promise}\n   */\n  put(path = '', body = {}, { queryParams = {} } = {}) {\n    return this.fetchRequest('PUT', path, queryParams, body);\n  }\n\n  /**\n   * Make DELETE request\n   * @param {string} path Path (ex. \"/users\")\n   * @param {object} queryParams  Additional query params to merge\n   * @return {Promise}\n   */\n  remove(path = '', { queryParams = {} } = {}) {\n    return this.fetchRequest('DELETE', path, queryParams, null);\n  }\n\n  /**\n   * Build options for fetch\n   * @param method\n   * @param path\n   * @param queryParams\n   * @param body\n   * @private\n   */\n  buildFetchOptions(method = 'GET', path = '', queryParams = {}, body = {}) {\n    const url = new URL(path, this.baseUrl);\n    if (typeof queryParams === 'object') {\n      addQueryParams(url.searchParams, queryParams);\n    }\n    const headers = new this.Headers({\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n    });\n    if (this.credentials) {\n      headers.set('Authorization', `Bearer ${this.credentials}`);\n    }\n    const options = {\n      method,\n      headers,\n      body: body ? JSON.stringify(body) : undefined,\n    };\n    return { url: url.toString(), options };\n  }\n\n  /**\n   * Parse response\n   * @param {number} status Status code\n   * @param {object} body JSON body object\n   * @private\n   * @return {{err: null, body: {object}}}\n   */\n  static parseResponse(status, body) {\n    if (status === 200 || status === 304) {\n      return body;\n    }\n    const code = body && body.code ? body.code : null;\n    const message = body && body.message ? body.message : '';\n    if (status === 400) {\n      throw new PayrexApiError(code === null ? 'ValidationFailed' : code, message);\n    }\n    if (status === 404) {\n      throw new PayrexApiError(code === null ? 'NotFound' : code, message);\n    }\n    if (status === 403) {\n      throw new PayrexApiError(code === null ? 'Forbidden' : code, message);\n    }\n    if (status === 500) {\n      throw new PayrexApiError(code === null ? 'ServerError' : code, message);\n    }\n    throw new PayrexApiError('UnexpectedStatusCode', 'UnexpectedStatusCode');\n  }\n\n  fetchRequest(method, path, queryParams, body) {\n    const { url, options } = this.buildFetchOptions(method, path, queryParams, body);\n    return this\n      .fetch\n      .call(null, url, options)\n      .then((response) => {\n        const { status } = response;\n        const contentType = response.headers.get('content-type');\n        if (!(contentType && contentType.includes('application/json'))) {\n          throw new TypeError('Expected to recieve JSON');\n        }\n        return response\n          .json()\n          .then(json => this.constructor.parseResponse(status, json));\n      });\n  }\n}\n\nPayrexSdkBase.PayrexApiError = PayrexApiError;\n\nmodule.exports = PayrexSdkBase;\n"]}